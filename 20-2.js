// let cameraTiles = [["Tile 1409:", "##..#.#.#.", "##........", "#.#...##.#", "#..#..#...", ".......##.", "##......##", "..........", ".........#", ".#..##....", "#.##...##."], ["Tile 2939:", "......#.##", "##.#......", "...##...##", "#.#.....##", "#...#....#", ".#..#....#", "#.....##.#", "..##.#...#", "..#.#.#..#", "#######..#"], ["Tile 3347:", "...##..#.#", ".#......#.", ".#........", "#.....#...", "#.....##..", "##.......#", ".....#....", "......###.", "#...#..##.", "########.#"], ["Tile 1297:", "#..#.##.##", "#..###...#", "#.##......", "...#.#...#", "#.#......#", "....#....#", ".#..#.....", "......##..", "#.........", "...#.##.##"], ["Tile 3203:", "####.#.#..", "#.#.#.##..", "#......###", "#....###.#", ".......#.#", "#.........", "#..#..##..", "..##...#.#", "#.....##..", "#.##.#...#"], ["Tile 1283:", "####..#...", "#.......##", "#....#..#.", "..##.....#", ".#...#####", "###...#...", "..##....#.", ".#.......#", ".##.#.....", "#.###..###"], ["Tile 1879:", "######.#..", "..#.#....#", "..#..##...", ".#...#.#..", "....#....#", "....#.#.##", "##.......#", "#...#..#.#", "..#.##....", "#..####.#."], ["Tile 2293:", "#.##.###.#", "..#.....##", "#...#.....", "..##......", ".#...#.#.#", "#........#", ".##...###.", "###.#....#", "...#......", ".#..######"], ["Tile 3079:", "#.###.....", "......#...", "..##......", "..#...#...", ".#.#......", "#....#...#", "........##", "..#..#...#", "#..#......", "#.#.#.###."], ["Tile 1069:", ".#.##.....", "...##...#.", "###.#..##.", ".#....#.##", "......#.#.", "#.#..#.##.", "...#......", "#..##...#.", "##.##.....", "#.#.##.#.."], ["Tile 1229:", "#.#...#..#", ".........#", "....#..##.", "#.#...#..#", "...###.#.#", "##.##.....", "...##....#", "..#..#.###", "..#......#", ".##..#.#.#"], ["Tile 3631:", "###.....##", "#.#.......", "#.#.#..#.#", "....#...##", "#.###.#.#.", ".....##.##", "...#..###.", "#..#...#.#", "..#..##..#", ".##.#.#..#"], ["Tile 1747:", "..##.....#", ".#.....#.#", "..........", "..#.#.#..#", "#...#.....", "..##.#.#..", "#....#..##", "...#.....#", "#.....##.#", "..#.#####."], ["Tile 2531:", ".#...##...", "#....####.", "##...##..#", "#..#...#..", "##....#...", ".#....#.##", ".........#", ".#......#.", "...#...#.#", "##....#..."], ["Tile 2203:", "##..#...##", "##..#.#..#", "....##..#.", "###.###...", ".......#.#", "#.....##.#", "#.#....#..", ".......#.#", "...#.#....", "##.#.####."], ["Tile 2777:", "...#.##...", "...#......", ".#....##..", "....#..#.#", "#.....#..#", "......##..", "#....##.##", "......#..#", "#..##.##..", "...#.#.###"], ["Tile 3323:", "#...##.#.#", "..#.......", "#......#..", ".#..##...#", "......##..", "#....#..##", ".......#.#", "....#...#.", "#.....#...", "##..#.#..#"], ["Tile 3319:", "#....#.##.", "##.....#.#", "####......", "..#.##..##", "##....##.#", ".......#.#", "..######.#", "#.#......#", "#..#......", "#..#.#..##"], ["Tile 3313:", "...#.##.##", "........##", "##..#...##", "##.....#.#", "##..#....#", ".......#..", "##.......#", "#.#.......", ".........#", "#.#..###.#"], ["Tile 2657:", ".###..#..#", "..#......#", ".#...##...", "#..#.....#", "....#...##", "#.........", "...##.#...", ".##....#.#", "##...#....", "#.####...#"], ["Tile 1907:", "#.#####.#.", "##..#.##..", ".....#.###", ".#.#..##.#", ".#.###...#", "...####...", "#..###....", "##....#...", "..#..#.#..", "#...###.#."], ["Tile 3373:", "#.#####...", "..###.....", ".##..#..##", "....#...##", "......#..#", "..##.....#", "....##.###", ".#.#.....#", "#..##.#...", ".......###"], ["Tile 3253:", "##..###..#", "##......##", "##.......#", "##.#......", "##.......#", "#........#", "..##...###", "#..###..#.", "#.....###.", "..#.##..##"], ["Tile 2767:", "......####", "..#...####", "..###.....", "#...##...#", "...#..#..#", ".####....#", "#...##...#", "...##.####", "#...##.#..", "..#.....##"], ["Tile 3761:", "....######", ".......###", ".#.##.....", ".......#..", "..........", ".#.#.....#", "#........#", "##.##...##", "#......#.#", "#.##.#..#."], ["Tile 1031:", "...#.###.#", ".#......#.", "##...#..#.", "#...#.....", "#.....#.##", "#.#...#..#", "##..##.#..", ".##.#..#..", "..#.....##", ".......#.#"], ["Tile 1181:", "####..#.##", ".....###.#", "..##..#...", "...#.#..##", "...#....#.", "#.......##", "...#....##", "#..##.#..#", "###...#...", "#.##..#.#."], ["Tile 2887:", ".####..#.#", ".......#.#", "#.#..#.#.#", "#.##.....#", "...#.#...#", "###..#....", "#...#.....", ".....#....", "###..#..#.", "...###..#."], ["Tile 1381:", "#...#..#.#", "..........", "....#...#.", "..#..##...", "........##", "#.#.......", "##........", ".#..##...#", "#..#......", "########.."], ["Tile 2621:", "...#.####.", "#...#..#..", "#.#.....#.", "..##.#..##", "####..#...", ".###.#..#.", "##...##..#", "#..#.#..#.", "#..##.#...", "#..###...#"], ["Tile 1597:", "##.##..###", ".#...##...", "..##....#.", ".##.......", ".##....#.#", "#..#.#....", "#........#", "...#......", ".#..###.##", "...###.###"], ["Tile 3533:", "#.###.##.#", "##.##...#.", "##..#.#.##", ".#.#..#.##", "#.....#...", "#..#...#.#", "..###.#..#", ".#....#.#.", "#.........", "#...#.#.##"], ["Tile 1249:", ".##.....##", "#.....#.##", "#..#..#.##", "#.#.#...#.", "......#...", ".#...##...", "##.#.....#", "..###.....", "#.......#.", "#.######.."], ["Tile 2843:", "#.#.#.....", ".......#.#", "#.....###.", "#.....##.#", "...##.##.#", "#...#.####", "..#.#....#", ".......#..", "##.#..#.##", ".##.##...#"], ["Tile 1583:", "..####.#..", "##..#....#", "###...##.#", "#....#.##.", "#..#......", "##.......#", "##.#...#..", "....#.#..#", "....#..#.#", "....#.###."], ["Tile 3169:", "...#.###..", ".####.....", "#.#.#..#..", "#...#..#..", "..........", "##.#...#..", "..........", "#..#....##", "#...#....#", "..##.....#"], ["Tile 1367:", "......##..", ".##.......", "##.#..##.#", "#...#.#...", "#.###.#..#", "#.#...#..#", ".....#...#", ".....#...#", "#.#.#.#...", "#....##..."], ["Tile 2099:", "..###.####", ".####.###.", "...#...#..", "...##.##.#", "#....##...", "....#..#.#", "...#...##.", "#........#", "#..#.#..#.", "..##...##."], ["Tile 3613:", "#.#.####..", "###......#", ".##..##...", "##..##...#", "#........#", ".....#....", ".......#..", ".##.#.....", ".##.#....#", "####..#.##"], ["Tile 3727:", "..#.##.##.", "#..#..##..", "##........", "#.......#.", ".#.###.#..", ".#....#...", "#.........", "#...#.#.#.", ".#..#...##", ".###.#.#.."], ["Tile 3697:", "##.###.#..", "......####", "#...#.#...", ".###...#.#", "##.#....#.", "..##.#..#.", ".##....#.#", "#..#.....#", ".#........", "#######.#."], ["Tile 2503:", "..#.#..#..", ".......###", "....#.....", "####.#.##.", "...##...#.", "#..#..#..#", "..........", ".......#..", "##..#..#.#", ".#...#.###"], ["Tile 2131:", "##..#...##", "#..#.#..##", "..##...##.", ".....#.#.#", "...##....#", "..##..#..#", "..........", "......#.#.", ".#..#.#.##", "#..##.##.."], ["Tile 2129:", ".#.#....#.", ".......#.#", ".....#..#.", ".#......#.", "###.#.#...", "##.##.#...", "...#.##...", "......####", "....#####.", "#..#.##.#."], ["Tile 3643:", "##..#.....", ".##.##...#", "#....#...#", "#.###.....", "####.#....", ".#.....#..", "##..###.#.", "..#..#.#.#", "#..##.#..#", "#...##..##"], ["Tile 1307:", "#......#.#", "##...#..#.", "......##..", "....#.#..#", "#....##..#", "......#.##", "....#.#..#", "#....#....", "#..#..#...", "#..#.#.#.."], ["Tile 3989:", "..###.#..#", "###...#...", "..#..#....", "##....#.#.", "##..#.#..#", ".......##.", "...#..##.#", "#....#....", "......#...", "####.#..#."], ["Tile 2347:", ".#########", "##...#.#.#", "..#.##...#", "#..#..##..", "#..#......", "###......#", ".##...#...", ".####...#.", "#...#.##..", ".#.#####.."], ["Tile 2801:", "#.###.####", "......#..#", "...##.....", "#.....#..#", "...#......", "........##", "..###.####", "#.#.#.##..", "###...##..", "##.##..##."], ["Tile 2543:", ".....#..##", "#....#.#..", "....#.##.#", "##.#..###.", ".#.#.#..##", "#.###.#..#", "##..#..#.#", "...###.#..", ".....###.#", ".##..#.#.#"], ["Tile 2029:", "##.##..###", ".........#", "#.#......#", "#.#.#..#.#", ".#.#.##.##", "#.....####", "...#.#....", "#..##....#", "....#.#...", "###.#..###"], ["Tile 1889:", "#..#.#####", "#.#.#...##", "#.#...##.#", ".....#...#", "##...#.###", ".....#....", "#.#......#", "#........#", "...#......", ".#..#####."], ["Tile 1787:", "######.#.#", "#.........", ".#.#.#....", "...#.....#", "#..#.#..##", "##.#...#..", "...#.....#", "##..#.#...", "#.....##..", "#...##.###"], ["Tile 1619:", "#.####....", "#.#.#.##..", "#...#....#", ".#........", ".......#..", "#....#.#.#", ".......#.#", ".#.#..##.#", ".##..##.#.", ".#...##..."], ["Tile 2617:", "#..##.###.", ".###...#..", "..#.....#.", "#....##...", "#...#...##", ".#.....#.#", "#....#...#", "...##..#.#", "........##", "...###...#"], ["Tile 2879:", "#.#.####..", ".....#....", ".###...#..", "...#......", "#.#.....#.", "....#.....", ".#.#.#.#.#", "......#.#.", "#.........", "#.#..#####"], ["Tile 1429:", "..#.......", "#.##.#.###", "#......###", "....#...#.", ".....#.#.#", "..#....###", "#..#......", "....#..#..", "..#...#...", ".#####.#.."], ["Tile 2797:", "##.#.#..#.", ".....#.#.#", ".......#.#", "#...#.#...", ".##.#.##.#", ".##.....##", "##......#.", "##.#.#.#..", ".....#...#", "##.#######"], ["Tile 3943:", "..#.#.####", ".#.......#", "#..#.##.#.", ".#..#....#", ".#.##....#", "#.#.#.#..#", "......#...", "#...##...#", "#....##...", ".##....#.#"], ["Tile 3691:", "##.#...###", ".#.##...#.", "##.##....#", ".##.......", "......#..#", "...#..#..#", "####.....#", "#..####...", "..#.....#.", "...#.#...."], ["Tile 3083:", "#.###.....", "#.#....#.#", "#..#...###", "...#..#..#", "..#..#....", "##...#.#.#", "#.#.......", "#.#..###..", "##.#.....#", ".#.##....."], ["Tile 1013:", "#....#..##", "#..#....##", "#.#.#.#...", ".....#.#.#", "#........#", "..#.....#.", ".##..#.###", "#..#..#.#.", "........##", "#.#.#.#.##"], ["Tile 2089:", "##.#.#..#.", "#...#...##", "#...#...##", "..#....###", "...#......", "......##..", "#......###", "...#...###", ".##...#.#.", ".##...###."], ["Tile 2551:", "###.######", "####.#.###", ".##.##...#", "#..##.##.#", "#.#.#.#..#", "....#.#...", "#.#....#..", "##...#...#", "#..#.#...#", "..###..#.#"], ["Tile 3607:", ".#...##..#", "####......", "#..#.##..#", "#..#......", "###.....#.", "#....###..", ".........#", "....##.#.#", "......#..#", "...#####.."], ["Tile 1831:", "##....##..", "##.#......", "#.#....#..", "#.##..##..", "...###....", "##.#.#...#", "#...#.#...", "....#....#", "##......##", ".##.#..#.#"], ["Tile 1697:", "##..###.#.", "#..#...###", "#..#.....#", "......#...", "...#......", "#........#", ".#....####", "#....#....", "..##.###..", ".#.##..#.."], ["Tile 1621:", "....##.##.", "....#.#...", "....#.#.#.", "#.#...#..#", "..#..#.#..", "#........#", "....##....", "#.###.#..#", "#....#..##", "#..####..."], ["Tile 1019:", ".#.###..#.", "###.......", "#...#.#..#", "..#.#.....", "#.....###.", "....#..#.#", ".#.#.#.#..", "#.........", "#...#..#.#", "..##..####"], ["Tile 1471:", "...#.####.", "...##.##..", "#.#.#..###", "..##...###", "##.###....", "#....#...#", "........##", "#.##....#.", "##.##..#.#", "####.###.."], ["Tile 3797:", "..##...##.", "#...#....#", "###.###.##", "##....##..", "#.#.#...##", "....##....", "#.....#..#", "#...#.#...", "#.##.#..#.", "..#.#.#.#."], ["Tile 1231:", "##....#..#", "#.........", "#..#.#....", "##...#....", "#..#.#...#", "###.##....", "##.#....#.", "....#.#..#", ".#...#..##", "#..#####.#"], ["Tile 1667:", "##.##.#..#", "...#..#.##", "..........", "#.........", "..#.##...#", "....#.#.##", "..#.##...#", "##...###.#", "###.......", "#####..###"], ["Tile 3719:", "..##.##..#", "...#......", "#......#.#", "#.#..###..", "....#.#.#.", "#.........", "#........#", "##.......#", "#.....#..#", ".##.#.####"], ["Tile 1103:", ".#..####.#", "#....##.##", "....###..#", "#.........", "#..#.....#", "#......#..", ".#..###.#.", ".....#....", ".......#.#", ".##.##.###"], ["Tile 2609:", "..####..#.", "#.....#..#", ".#.####...", "....#.....", "#......#.#", ".........#", ".......#..", "#.##.#....", "..#.#.....", "####.##..#"], ["Tile 1117:", ".#.#..##.#", "#...#....#", "#.#..####.", ".#.......#", "#...#.....", "#...#....#", "#..#.#.#..", ".........#", ".....#.##.", ".#..####.#"], ["Tile 3359:", "##...#.#.#", "..#.#....#", "..#..##...", ".......#..", ".........#", "#.#...###.", "..#..#...#", "#..#.....#", "#..#.#..##", ".###.#.#.#"], ["Tile 2851:", ".#....####", "#...##...#", "#..#.....#", "#......#..", "#.......#.", ".###.#.#..", "#....#..#.", "###......#", "#.##.#..#.", "..#...#.##"], ["Tile 2423:", ".#..#.####", "...#....#.", ".....##...", ".........#", "........##", "##.......#", "........#.", "#....#..##", "#.#.......", "#...##.##."], ["Tile 1579:", ".##....#.#", "##...#....", ".#.##....#", "..##.#.###", ".#..#.#..#", "....##..#.", "..#..##..#", "#.#..##...", ".........#", ".#.###.###"], ["Tile 1361:", "....#..##.", ".###.#...#", "...#.#....", "#..#..#...", "#.##......", "#..#...#..", ".##......#", ".#...#.#.#", "#........#", ".#.#######"], ["Tile 1171:", "##.####..#", "....#.#..#", "#..#.....#", "#.#......#", "###...#..#", ".##.#...##", "##..##.#.#", "#..#.#..##", "#......#.#", "....#.###."], ["Tile 3847:", "##...#..#.", "##.#.#..##", "..........", "#........#", "..........", "#........#", "#..#.#....", ".#.....#.#", "....#.....", "#.##.##.##"], ["Tile 2557:", "##..#.#...", ".#.#..#...", "####....#.", "#...#.#...", "...#.....#", "..#..##..#", "..###.#.##", "...#..#..#", ".....##...", "##.####..#"], ["Tile 2069:", "..###....#", "###..#.###", "........##", "#..#.#..#.", ".........#", "##.#.#.#.#", "....#...#.", "...#.#....", "........#.", "#.#.##..##"], ["Tile 2179:", "##...#.#.#", ".##..#.##.", "#..#..#...", "..........", "###.#....#", "..........", "#...#.....", "#........#", "....#...#.", "##..####.."], ["Tile 2659:", "##..#...#.", "#....##...", ".....#.#.#", ".......#..", "##.#..#.#.", "##........", "#....###.#", "#......#.#", ".........#", "#...#.##.#"], ["Tile 1097:", ".#..#.###.", ".....#..##", "....####..", ".#.#.....#", "......##.#", ".#..####.#", ".###....#.", "..##.##...", "###.##.#..", "#..###...#"], ["Tile 2143:", ".##.....#.", "......#..#", ".#........", "##......##", "###....##.", "#...#....#", "..#..#..##", "..##....#.", "#.#.......", "#..#####.#"], ["Tile 3527:", "##.#...#..", "..#.###..#", ".........#", ".....##.##", ".#.....###", "#.#...#..#", ".#.##.#.##", "###.#..#..", ".........#", "#####.#.##"], ["Tile 1063:", "##.#.#.##.", "##...#....", "#.........", "##..#.#..#", "......##.#", "##....#.#.", ".....#..##", "##.###...#", ".....##.#.", "#......#.#"], ["Tile 2593:", "#...####.#", "##.####...", "##.#.#..#.", "#........#", "#...#....#", ".........#", ".#..#..#.#", "......#...", ".#.......#", "##..#####."], ["Tile 1753:", "...#.#..#.", "#.....#...", ".#......##", ".#....##.#", ".#..#...##", "..#..###..", "###......#", "#.#.#..###", "###....##.", "..#.##...#"], ["Tile 2273:", "#..##.###.", "#.....#...", "#...##....", "..#....###", "#.........", "#####.#...", "##..###..#", "#...##....", "#.#......#", "##.##..##."], ["Tile 2731:", ".#..#..##.", "...#...#.#", "...##.....", "#..#..#..#", "..........", ".......###", "...#..####", "##.##....#", "...#.#..#.", ".##..#..##"], ["Tile 2477:", "..#.###.##", "#..#.#....", ".#.....#..", "##..#.##..", "...##....#", "#.#.#...##", ".##......#", "..##..#..#", "..#......#", "#..#..#.##"], ["Tile 2243:", ".#..######", "..#..####.", "...##.#...", "...##..#.#", "..#.#...#.", "#.#.#..#..", "..#......#", "#...#.#...", "...##...##", "##.#####.#"], ["Tile 1451:", "#.####.#.#", "#........#", "#.#......#", ".#.......#", ".........#", "..........", "#.........", ".........#", "#.........", "..#..#..##"], ["Tile 1289:", "#....#...#", "#.....#.#.", "...#......", ".#....###.", "......#..#", "##........", "###.......", ".#...#..#.", "..#..#.#.#", "#.#...###."], ["Tile 2927:", "..##.#..#.", "##.#.#..#.", "..########", "#....##...", "...#.##...", "#.........", "#.....#.#.", "#.##..#...", "....#.#...", "#.##.#..##"], ["Tile 3433:", "#.##...###", "#.#..#..#.", ".#.....#.#", "#..#......", ".....##...", "#.##.....#", "#..#....##", ".....#..##", "##..#.....", "..###..###"], ["Tile 1913:", "#.##..#.##", "#..####.#.", "#.##..##..", "....#..#..", ".#.....#..", ".#..#....#", "#..####.##", "..#..#...#", "#.......##", ".#.#####.."], ["Tile 1567:", "####...##.", "#..#.....#", "##..#...#.", "##.#.#.#.#", "..#.#.#...", "##.#..#..#", ".##...##.#", "....#...#.", "..###..#..", "...#..####"], ["Tile 2707:", ".#.#.#..##", ".#....#..#", "#..#.#...#", "......#.#.", ".#..##...#", ".#.##.....", "#.#.....##", "#.....#..#", "#..#..##.#", "#..#...#.#"], ["Tile 3803:", "#..#.#...#", ".#........", "##....###.", "#.##....##", "..#....#..", "##.#..#.#.", "....#..#.#", ".#.......#", "#..#...#.#", "##.....###"], ["Tile 2837:", ".#..#####.", "#.......##", "###..#.###", "#...#....#", "..#..#.#..", "....#....#", ".#..##.##.", "...#.....#", "#...#..#.#", ".##...##.#"], ["Tile 2473:", "#.##..##..", "....#..#.#", ".........#", "#.....##..", "....#.#..#", "...#..#...", "....#...##", ".....###..", "..#......#", "##..###..#"], ["Tile 3121:", "...#.##..#", "#........#", ".##..##...", "#.....#..#", "......##.#", "......#.#.", "......#..#", "........##", "#...#....#", ".##.#..#.."], ["Tile 1637:", "#....#....", "....#..#..", "#......#.#", "#..#..#..#", "#.......##", "#..##.....", "#....#...#", ".#........", ".##..##.##", ".##...###."], ["Tile 1091:", "..###....#", "###...#...", "..#......#", "##........", ".........#", ".....##..#", "###.##....", "#..#....#.", ".#.#.#....", ".....#####"], ["Tile 1453:", "###...#.##", ".##..#.#.#", ".#.......#", ".##...#..#", "#..#...#..", ".##...#..#", "#....##..#", "...##..#..", "....#.....", "..##....##"], ["Tile 2861:", "##....####", ".....#...#", ".##.#...#.", ".....##..#", "##..##..#.", "#...#.##.#", "##....##.#", "#..#.#....", "#####.#...", "##.....#.."], ["Tile 2677:", "##..#..#.#", "#....#....", ".#..#....#", ".###....#.", ".#........", ".....#.#.#", "#..#.....#", "#.##.##.##", "..#.##..##", "#..#..#..."], ["Tile 3413:", "..###.#..#", "...##.....", "...#..####", "........#.", "##.....#.#", "......#..#", "#...#..#.#", "#.......#.", "##..#.#.#.", "#...#####."], ["Tile 1193:", "#.#.#.#.#.", ".#....##..", "#.........", ".......#.#", "..#.#.#.##", "...#...##.", "##........", "#..#....##", ".........#", "####...###"], ["Tile 1949:", "##..#..##.", ".....#..#.", "...##...##", "####....##", ".#..#.....", "#........#", ".##.#....#", "...##.....", "...#..####", "###...####"], ["Tile 3863:", "#.#..#.###", "#.#.....##", "##....##.#", "..###.###.", "#.##....#.", "...#.#.###", "...#..#.##", "..#......#", "##...#...#", "#..#.#.##."], ["Tile 1439:", "#....#.###", ".....#.#.#", ".#.#...##.", ".##.#....#", "#....#....", "....#.#..#", ".....#...#", "#...###...", ".#..##..##", "##..#.####"], ["Tile 1129:", "..########", "..#.#.#...", "....##....", ".......#..", "........##", "..........", "#..#.#.#..", "##........", ".........#", "..##..####"], ["Tile 2953:", ".#.###.###", "........#.", "....#.#.##", "..#.#....#", "......#.##", "...#....#.", "###...#..#", "....#.....", "#.........", "#...#...#."], ["Tile 3371:", "##..#..###", "##.....###", "##....#..#", "#.....#...", "###.#..###", ".#.#..#.##", "##........", "##.......#", "#.##..#...", "..##.####."], ["Tile 1399:", "#.....#.#.", "#......#..", ".#..#....#", "####..#..#", "#..#.....#", "##..#..#..", "#.....#.##", ".#..##..#.", ".#..#....#", "..#.#.###."], ["Tile 3911:", ".#.....#.#", "..#.....##", "#...##....", "#.........", "..#.#...##", "..#...#..#", ".#.#....##", "#..##....#", ".#..##..##", "#.#..#..#."], ["Tile 1699:", ".####.####", "..#..#....", "#.....#.#.", "...#..##..", "##.#..#...", "##..##....", "#..#..#.#.", ".###.#....", ".....##.##", ".#..#...##"], ["Tile 3701:", ".#.#.#.#..", "..#.####.#", "..##...###", "......##.#", "....#....#", ".....#..##", "...#.#.###", "#..####.#.", "...##....#", "..###..###"], ["Tile 1811:", ".##.##.#..", "....#....#", "#......#.#", ".....#..#.", "#..#.#...#", ".#.#.##..#", "......#...", "..##..#...", ".....#...#", "#####.#..#"], ["Tile 2539:", "...######.", "#...#.###.", ".#..#.....", ".....#...#", ".#...#...#", "#.###..###", ".######...", "#...#.#.##", "#.....##.#", "...#..#.##"], ["Tile 3517:", ".#...#.##.", "#....#..#.", "#......#.#", "##.##.....", "...###..#.", "#..#.#...#", "#...#.#...", "###.......", ".#.......#", "######.#.."], ["Tile 2113:", "#..###..#.", "...#....##", "##.......#", "#....##..#", "..#.#..###", "#.#......#", "#.....#..#", ".#..#.#..#", "...###....", "##.#..#..."], ["Tile 1009:", "...##..###", "..#.......", ".#.....##.", "##....#..#", "##........", "#....#..#.", ".........#", "#.#..#..##", "....#.#..#", "..#.##.#.#"], ["Tile 1559:", "###....#.#", ".###...#.#", "#.#.....#.", ".#..#.#..#", "....##.#.#", "#.#..##.##", "..#..##...", "#.###.....", ".#.#.##..#", "##....####"], ["Tile 2971:", "...###...#", "......##..", "...#....##", ".#.#.##..#", "###.#.##.#", "#..#...##.", "..#.#...##", ".....#.##.", ".#........", "##....#..#"], ["Tile 1327:", ".#..##...#", "#.##.....#", ".#.....#.#", "...###...#", "#....#....", ".#.......#", ".#.......#", "#.........", ".....#...#", "..#######."], ["Tile 3217:", "..###..#..", ".#..#....#", "......####", "###....#.#", "###...#...", ".#...#....", "........##", "#.##.#.##.", "#......#..", "...#...#.#"], ["Tile 1861:", "####.####.", ".#.....#..", "###...#...", ".##.#..##.", "...#..#...", "...#..#...", "##..#...##", "#...##..#.", "#...#.....", "##........"], ["Tile 3593:", ".##.##.###", "....#...##", ".#..#....#", "#..##.##..", "#..#...###", "...#..##..", "....#...##", "###......#", "..........", "..#......#"], ["Tile 3041:", "###..###.#", "....####..", "....#..##.", "#.#.....##", "#..#...#..", "#.......##", ".#...#####", "##.#...#.#", "..#.###.#.", ".####...##"], ["Tile 2647:", "#.###.####", "#...#...##", ".##....##.", "#.#.#.....", "#..#..##.#", "##....#..#", "..#....###", ".....###..", "........##", "#.#.#....#"], ["Tile 2437:", ".##...#...", "#.#...##.#", ".#....##.#", "#####...#.", "#...##.#..", "..#....#..", "#.......#.", "..#..#.#..", "#.##...#.#", "#.##..#..#"], ["Tile 3709:", "#######.##", "###.#..##.", "#.#...#..#", ".#....####", "##...#..#.", "....#..#..", "##........", "#..##..#.#", ".....#...#", "..#.##...#"], ["Tile 2039:", "##.###..#.", "...#.....#", "..#...##.#", "##.#.#...#", "#....#..#.", "#.####...#", "...##...##", "##...##..#", "#.....##.#", "####.#.#.#"], ["Tile 3011:", "...##.#...", ".........#", "###.####.#", "#.......#.", ".#.....#.#", "..######..", "#.....#..#", "#........#", ".##.##....", "#.....###."], ["Tile 1151:", ".##.#..#.#", "#.##.....#", "...#..#...", "....##..##", "###....###", "##..#..#.#", "#...#....#", "..#....#..", "...#.....#", "#.#..#.#.."]];

// test data
let cameraTiles = [["Tile 2311:", "..##.#..#.", "##..#.....", "#...##..#.", "####.#...#", "##.##.###.", "##...#.###", ".#.#.#..##", "..#....#..", "###...#.#.", "..###..###"], ["Tile 1951:", "#.##...##.", "#.####...#", ".....#..##", "#...######", ".##.#....#", ".###.#####", "###.##.##.", ".###....#.", "..#.#..#.#", "#...##.#.."], ["Tile 1171:", "####...##.", "#..##.#..#", "##.#..#.#.", ".###.####.", "..###.####", ".##....##.", ".#...####.", "#.##.####.", "####..#...", ".....##..."], ["Tile 1427:", "###.##.#..", ".#..#.##..", ".#.##.#..#", "#.#.#.##.#", "....#...##", "...##..##.", "...#.#####", ".#.####.#.", "..#..###.#", "..##.#..#."], ["Tile 1489:", "##.#.#....", "..##...#..", ".##..##...", "..#...#...", "#####...#.", "#..#.#.#.#", "...#.#.#..", "##.#...##.", "..##.##.##", "###.##.#.."], ["Tile 2473:", "#....####.", "#..#.##...", "#.##..#...", "######.#.#", ".#...#.#.#", ".#########", ".###.#..#.", "########.#", "##...##.#.", "..###.#.#."], ["Tile 2971:", "..#.#....#", "#...###...", "#.#.###...", "##.##..#..", ".#####..##", ".#..####.#", "#..#.#..#.", "..####.###", "..#.#.###.", "...#.#.#.#"], ["Tile 2729:", "...#.#.#.#", "####.#....", "..#.#.....", "....#..#.#", ".##..##.#.", ".#.####...", "####.#.#..", "##.####...", "##..#.##..", "#.##...##."], ["Tile 3079:", "#.#.#####.", ".#..######", "..#.......", "######....", "####.#..#.", ".#...#.##.", "#.#####.##", "..#.###...", "..#.......", "..#.###..."]];

cameraTiles = cameraTiles.map(tile => {
  let t = {
    id: +tile[0].match(/(\d){1,}/g)[0],
    content: tile.slice(1),
  }
  let a = []; let b = [];
  t.content.forEach(row => {
    a.push(row[0]);
    b.push(row[row.length - 1]);
  })
  t.borders = [
    { border: t.content[0], match: null },
    { border: b.join(""), match: null },
    { border: t.content[t.content.length - 1].split("").reverse().join(""), match: null },
    { border: a.reverse().join(""), match: null }
  ]
  return t;
});

let monster = ["                  # ", "#    ##    ##    ###", " #  #  #  #  #  #   "];

cameraTiles.forEach(tile => tile.borders.map(b => { // {border: "..#.", match: null}
  let m = cameraTiles.find((t, i) => cameraTiles.indexOf(tile) !== i
    && t.borders.some(tb => b.border === tb.border
      || b.border === tb.border.split("").reverse().join("")));
  b.match = (m && m.id) || null;
  return b;
}));

let middleTiles = cameraTiles.filter(t => t.borders.every(b => b.match));
let edgeTiles = cameraTiles.filter(t => t.borders.some(b => !b.match));
let cornerTiles = edgeTiles.filter(t => t.borders.filter(b => b.match).length === 2);
let size = Math.sqrt(cameraTiles.length);

let positionedTiles = new Array(size);
for (let i = 0; i < size; i++) {
  positionedTiles[i] = new Array(size);
}

function setEdge() {
  let edge = [];
  let tile = cornerTiles.find(t => t.borders[0].match === null && t.borders[3].match === null);
  edgeTiles.splice(edgeTiles.indexOf(tile), 1)[0];
  let l = size * 4 - 4;
  for (let i = 0; i < l; i++) {
    edge.push(tile);
    let nextIndex;
    tile = edgeTiles.find((t, i) => {
      nextIndex = i;
      return t.borders.some(b => b.match === tile.id);
    });
    edgeTiles.splice(nextIndex, 1);
  }

  let a = edge.splice(0, size);
  let b = edge.splice(0, size - 2);
  let c = edge.splice(0, size).reverse();
  let d = edge.reverse();

  for (let i = 0; i < size - 2; i++) {
    positionedTiles[i + 1][size - 1] = b[i];
    positionedTiles[i + 1][0] = d[i];
  }
  positionedTiles[0] = a;
  positionedTiles[size - 1] = c;

  let row;
  for (let i = 0; i < edge.length; i++) {
    if (i % size === 0) row = [];
    row.push(edge[i])

  }
  return positionedTiles;
}

function fillMiddle() {
  for (i = 1; i < size - 1; i++) { // rows
    for (j = 1; j < size - 1; j++) { // columns
      if (positionedTiles[i][j]) continue;
      positionedTiles[i][j] = matchTile(i, j);
      matchTile(i, j);
    }
  }
  return positionedTiles;
}

function matchTile(row, column) {
  let topNeighbour = positionedTiles[row - 1][column];
  let leftNeighbour = positionedTiles[row][column - 1];
  let possibleIds = topNeighbour.borders
    .filter(b => b.match && leftNeighbour.borders.some(lb => lb.match === b.match)).map(b => b.match);
  let tiles = middleTiles.filter(t => possibleIds.includes(t.id));
  if (tiles.length === 1) {
    middleTiles.splice(middleTiles.indexOf(tiles[0]), 1);
    return tiles[0];
  }
}

positionedTiles = setEdge();
while (middleTiles.length) {
  positionedTiles = fillMiddle();
}

function determineOrientation(i, j) {
  let currentTile = positionedTiles[i][j];
  let topNeighbourTile = positionedTiles[i - 1] && positionedTiles[i - 1][j];
  let leftNeighbourTile = positionedTiles[i][j - 1];
  let bottomNeighbourTile = positionedTiles[i + 1] && positionedTiles[i + 1][j];
  let rightNeighbourTile = positionedTiles[i][j + 1];

  let matchesTop = topNeighbourTile ? currentTile.borders[0].match === topNeighbourTile.id : currentTile.borders[0].match === null;
  let matchesLeft = leftNeighbourTile ? currentTile.borders[3].match === leftNeighbourTile.id : currentTile.borders[3].match === null;
  if ((i != 0 || j != 0) && currentTile.borders.filter(b => !b.match).length === 2) {
    matchesTop = matchesTop && bottomNeighbourTile ? currentTile.borders[2].match === bottomNeighbourTile.id : currentTile.borders[2].match === null;
    matchesLeft = matchesLeft && rightNeighbourTile ? currentTile.borders[1].match === rightNeighbourTile.id : currentTile.borders[1].match === null;
  }
  if (matchesTop && matchesLeft) {
    console.log("tile ok");
  } else if (matchesTop || matchesLeft) {
    console.log("must be flipped")
    flipTile(i, j, matchesTop ? "LR" : "UD");
    determineOrientation(i, j)
  } else {
    console.log("must be rotated");
    let bor;
    let mod;
    if (topNeighbourTile) {
      bor = currentTile.borders.find(b => topNeighbourTile ? b.match === topNeighbourTile.id : b.match === null);
      mod = 0;
    } else if (leftNeighbourTile) {
      bor = currentTile.borders.find(b => leftNeighbourTile ? b.match === leftNeighbourTile.id : b.match === null);
      mod = 3;
    } else {
      bor = currentTile.borders.find(b => rightNeighbourTile ? b.match === rightNeighbourTile.id : b.match === null);
      mod = 1;
    }
    let index = mod - currentTile.borders.indexOf(bor);
    let topOffset = index < 0 ? index + 4 : index;
    rotateTile(i, j, topOffset);
    determineOrientation(i, j)
  }

  return currentTile;
}

function flipTile(i, j, direction) {
  let currentTileBorders = positionedTiles[i][j].borders;
  let indices = direction === "LR" ? [0, 2] : [1, 3]
  if (direction === "LR") {
    positionedTiles[i][j].content = positionedTiles[i][j].content.map(row => row.split("").reverse().join(""));
    positionedTiles[i][j].borders = [
      currentTileBorders[0], currentTileBorders[3], currentTileBorders[2], currentTileBorders[1]
    ]
  } else {
    positionedTiles[i][j].content.reverse();
    positionedTiles[i][j].borders = [
      currentTileBorders[2], currentTileBorders[1], currentTileBorders[0], currentTileBorders[3]
    ]
  }
  positionedTiles[i][j].borders[indices[0]].border = positionedTiles[i][j].borders[indices[0]].border
    .split("").reverse().join("");
  positionedTiles[i][j].borders[indices[1]].border = positionedTiles[i][j].borders[indices[1]].border
    .split("").reverse().join("");
}

function rotateTile(i, j, turns) {
  let currentTile = positionedTiles[i][j];
  if (turns === 2) {
    positionedTiles[i][j].content = positionedTiles[i][j].content.reverse();
    positionedTiles[i][j].content = positionedTiles[i][j].content.map(row => row.split("").reverse().join(""));
  } else if (turns === 1) {
    let content = JSON.parse(JSON.stringify(positionedTiles[i][j].content));
    content.reverse();
    let newContent = [];
    for (let x = 0; x < content.length; x++) {
      for (let y = 0; y < content.length; y++) {
        if (x === 0) newContent.push("");
        newContent[y] += content[x][y]
      }
    }
    positionedTiles[i][j].content = newContent;
  } else if (turns === 2) {
    let content = positionedTiles[i][j].content.map(row => row.split("").reverse().join(""));
    let newContent = [];
    for (let x = 0; x < content.length; x++) {
      for (let y = 0; y < content.length; y++) {
        if (x === 0) newContent.push("");
        newContent[y] += content[x][y]
      }
    }
    positionedTiles[i][j].content = newContent;
  }

  let indices = [0, 1, 2, 3].map(ind => {
    ind += turns;
    if (ind > 3) ind -= 4;
    return ind;
  })
  let bord = JSON.parse(JSON.stringify(positionedTiles[i][j].borders));
  for (let k = 0; k < 4; k++) {
    positionedTiles[i][j].borders[k] = bord[indices.indexOf(k)];
  }

  let a = []; let b = [];
  positionedTiles[i][j].content.forEach(row => {
    a.push(row[0]);
    b.push(row[row.length - 1]);
  })
  positionedTiles[i][j].borders[0].border = positionedTiles[i][j].content[0];
  positionedTiles[i][j].borders[1].border = b.join("");
  positionedTiles[i][j].borders[2].border = positionedTiles[i][j].content[positionedTiles[i][j].content.length - 1]
    .split("").reverse().join("");
  positionedTiles[i][j].borders[3].border = a.reverse().join("");
}

function assembleImage() {
  let image = []
  positionedTiles.forEach(row => {
    for (let i = 1; i < row[0].content.length - 1; i++) {
      r = "";
      row.forEach(tile => {
        r += tile.content[i].slice(1, -1) // + "   ";
      })
      image.push(r);
    }
  })
  return image;
}

for (i = 0; i < size; i++) { // rows
  for (j = 0; j < size; j++) { // columns
    determineOrientation(i, j);
  }
}

console.log("positionedTiles", positionedTiles)
let image = assembleImage();

function findMonster() {
  let bottom = monster[2];
  let middle = monster[1];
  let top = monster[0];
  let im = JSON.parse(JSON.stringify(image));
  im.reverse();
  let monsterStartingPos = [];

  for (let n = 0; n < image.length; n++) {
    for (let k = 0; k < im[n].length - bottom.length; k++) {
      let isMatch = true;
      for (let i = 0; i < monster[0].length; i++) {
        if (bottom[i] === "#" && im[n][k + i] !== "#") isMatch = false;
      }
      if (isMatch) {
        for (let j = 0; j < monster[0].length; j++) {
          if (middle[j] === "#" && im[n + 1][k + j] !== "#") isMatch = false;
        }
        if (isMatch) {
          for (let l = 0; l < monster[0].length; l++) {
            if (top[l] === "#" && im[n + 2][k + l] !== "#") isMatch = false;
          }
        }
      }
      if (isMatch) monsterStartingPos.push([n, k]);
    }
  }
  return monsterStartingPos;
}

function drawMonster(row, col) {
  let bottom = monster[2];
  let middle = monster[1];
  let top = monster[0];
  let im = JSON.parse(JSON.stringify(image));
  im.reverse();
  let len = image[0].length;

  for (let i = 0; i < monster[0].length; i++) {
    if (bottom[i] === "#") {
      let newRow = image[len - 1 - row].split("");
      newRow[col + i] = "O";
      image[len - 1 - row] = newRow.join("");
    }
  }
  for (let j = 0; j < monster[0].length; j++) {
    if (middle[j] === "#") {
      let newRow = image[len - 1 - row - 1].split("");
      newRow[col + j] = "O";
      image[len - 1 - row - 1] = newRow.join("");
    }
  }
  for (let l = 0; l < monster[0].length; l++) {
    if (top[l] === "#") {
      let newRow = image[len - 1 - row - 2].split("");
      newRow[col + l] = "O";
      image[len - 1 - row - 2] = newRow.join("");
    }
  }
}

function rotateImage() {
  let content = JSON.parse(JSON.stringify(image));
  content.reverse();
  let newContent = [];
  for (let x = 0; x < content.length; x++) {
    for (let y = 0; y < content.length; y++) {
      if (x === 0) newContent.push("");
      newContent[y] += content[x][y];
    }
  }
  image = newContent;
}

function flipImage(direction) {
  if (direction === "UD") {
    image = image.map(row => row.split("").reverse().join(""));
  } else {
    image.reverse();
  }
}

function printImage() {
  image.forEach(row => {
    console.log(row);
  })
}

let c = 0;
let monsterSP = [];

while (!monsterSP.length) {
  monsterSP = findMonster();
  if (monsterSP.length) {
    console.log(monsterSP);
    printImage();
    break;
  }
  flipImage("UD");
  monsterSP = findMonster();
  if (monsterSP.length) {
    console.log(monsterSP);
    printImage();
    break;
  }
  flipImage("UD");
  flipImage("LR");
  monsterSP = findMonster();
  if (monsterSP.length) {
    console.log(monsterSP);
    printImage();
    break;
  }
  flipImage("LR");
  rotateImage();
  c++;
  if (c > 3) break;
}

monsterSP.forEach(pos => drawMonster(pos[0], pos[1]));
console.log("");
printImage();

console.log(image.reduce((a, b) => a + b).split("").filter(el => el === "#").length);
image = image.map(r => r.replace(/#/g, "-"));
printImage();

console.log(image.reduce((a, b) => a + b).replaceAll(".", "").replaceAll("O", "").length);
